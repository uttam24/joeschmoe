{"version":3,"sources":["AvatarList.js","Result.js","App.js","reportWebVitals.js","index.js"],"names":["AvatarList","props","className","src","name","alt","work","Result","useState","set","setUpdate","avatarlistarray","id","arrayavatarcard","map","avatarcatd","i","keys","onClick","App","makeStyles","theme","root","padding","display","alignItems","width","margin","input","marginLeft","spacing","flex","iconButton","divider","height","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAiBeA,EAbG,SAACC,GAElB,OACA,mCACC,sBAAKC,UAAU,cAAf,UACA,qBAAKC,IAAG,sCAAiCF,EAAMG,MAAQC,IAAI,WAC3D,+BAAKJ,EAAMG,KAAX,OACA,4BAAIH,EAAMK,aC0CGC,EAjDD,SAACN,GAAU,IAAD,EAEGO,mBAAS,2BAFZ,mBAEhBC,EAFgB,KAEVC,EAFU,KAMjBC,EAAkB,CACxB,CACCC,GAAG,EACHR,KAAK,iBACLE,KAAK,kBAEL,CACAM,GAAG,EACHR,KAAK,gBACLE,KAAK,kBAEN,CACCM,GAAG,EACHR,KAAK,iBACLE,KAAK,iBAEN,CACCM,GAAG,EACHR,KAAK,aACLE,KAAK,iBAGN,CACCM,GAAG,EACHR,KAAK,cACLE,KAAK,mBAIAO,EAAkBF,EAAgBG,KAAI,SAACC,EAAYC,GACxD,OAAO,cAAC,EAAD,CAAYC,KAAM,EAAGL,GAAID,EAAgBK,GAAGJ,GAAIR,KAAMO,EAAgBK,GAAGZ,KAAME,KAAMK,EAAgBK,GAAGV,UAGhH,OACA,qCACA,6BAAKG,IACHI,EAEF,wBAAQK,QAzCQ,WACfR,EAAU,aAwCX,0BCAcS,GAvCGC,aAAW,SAACC,GAAD,oBAC3BC,KAAM,CACJC,QAAS,UACTC,QAAS,OACTC,WAAY,SACZC,MAAO,IACPC,OAAO,UAETC,MAAO,CACLC,WAAYR,EAAMS,QAAQ,GAC1BC,KAAM,GAERC,WAAY,CACVT,QAAS,IAEXU,QAAS,CACPC,OAAQ,GACRP,OAAQ,IAjBiB,QAmBtB,CACHO,OAAO,YAKA,WAGT,OACE,qBAAKhC,UAAU,MAAf,SACE,cAACiC,EAAA,EAAD,UAEA,cAAC,EAAD,UC7BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4efa8979.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst AvatarList =(props)=> {\r\n\r\n\treturn(\r\n\t<>\r\n\t <div className=\"avatarstyle\">\r\n\t\t<img src={`https://joeschmoe.io/api/v1/${props.name}`} alt=\"Avatar\"/>\r\n\t\t<h2>{props.name} </h2>\r\n\t\t<p>{props.work}</p>\r\n\t </div>\r\n\t</>\r\n\t)\r\n}\r\n\r\nexport default AvatarList\r\n","import React,{useState} from 'react'\r\nimport AvatarList from './AvatarList';\r\n\r\n\r\nconst Result =(props)=> {\r\n\r\n\tconst [set , setUpdate] = useState('Welcome to Avatar World');\r\n\tconst handler = ()=>{\r\n\t\tsetUpdate('React Js')\r\n\t}\r\n\tconst avatarlistarray = [\r\n\t{\r\n\t\tid:1,\r\n\t\tname:'Pravesh Sharma', \r\n\t\twork:'Multi-Talented'\r\n\t},\r\n\t\t{\r\n\t\tid:2,\r\n\t\tname:'Vitanshu Sahu', \r\n\t\twork:'Multi-Talented'\r\n\t},\r\n\t{\r\n\t\tid:3,\r\n\t\tname:'Mohit Karnawat', \r\n\t\twork:'Web Developer'\r\n\t},\r\n\t{\r\n\t\tid:4,\r\n\t\tname:'Mayuk Nair', \r\n\t\twork:'Web Developer'\r\n\t},\r\n\t\r\n\t{\r\n\t\tid:5,\r\n\t\tname:'Amom Imocha', \r\n\t\twork:'Multi-Talented'\r\n\t},\r\n\t]\r\n\r\n\tconst arrayavatarcard = avatarlistarray.map((avatarcatd, i)=>{\r\n\t\treturn <AvatarList keys={1} id={avatarlistarray[i].id} name={avatarlistarray[i].name} work={avatarlistarray[i].work}/>\r\n\t})\r\n\r\n\treturn(\r\n\t<>\r\n\t<h2>{set}</h2>\r\n\t\t{arrayavatarcard}\r\n\r\n\t<button onClick={handler}>Subcribe</button>\r\n\t</>\r\n\t)\r\n}\r\n\r\nexport default Result\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Result from './Result';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 300,\n    margin:'0 auto'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n input:{\n    height:'38px',\n  }\n  }));\n\n\nconst App =()=> {\n\n   \n  return (\n    <div className=\"App\">\n      <Container>\n      \n      <Result />\n  \n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}